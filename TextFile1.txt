// we will make folder Core
// make class library Abstraction Domain Services 
//Services should see abstraction and Domain 



// make folder infrastracture
//make class library Persistance
//persistance will see services

//make class library Presentation
//presentation will see Abstraction


//make shared class library in out of all folders in solution 

//absraction will see shared


/////////////////////////////////////////////////video 4 





{{ product module }}

[product ] --int id - string name - string deskription - string picture url - decimal price

[Product Brand ]     Int Id -  String Name

[product Type ]  int Id - string name




product Module 

[product]M ---------------------has----------------1[Brand]


[product]M ---------------------has-----------------1[Type]




// in Persistance --Data -- Configurations ,Migrations , Seeds ,StoreDBContext


// we will install in persistance  Entity framwork.sqlserver





//we will make application see a persistance and presentaion


// a position of connection string is in appsettings.json Ecommerce wep
  //so we will download tool in it




  //in using and build of end point we need dumi data 

  //we now will take the 4 json dumi data and put it into seeds


  //we should make this jsons as objects to put it into contexts
   //we will make a in domain a folder of contracts and in it make interface IdbIntializer


   //in Data make class DBInializer






///////////////////////////////////////////////////////////settion2/////////////////

//generic repository
//now we will complete my context to make a crud operations to a dbase
//develop with interface not a concreate class

//domain has contracts of dbase and implement of it is in persistance -
abstraction for services and have implement in presentaion

// implementation of abstraction is in services



//////////////////////////////////////
we use service manager to organize injection in controller and encapsulate







now in 6 video we will solve a problem of url path for photo

we should appling middlewares that talk with a files

//we need to add auto base to url
we will convert it in mapping by product dto 






////////////////////////////////////////////////////specifications to include where another linq

//we will use eaager loading because its only one brand and type in a product 
//we will make a query dynamic by specification design pattern 


1-entry point context.products (start of query)




2- where(p=>p.Id==id)  -where condition criteria {Get}  -> this a lambada expression 
we will store it in class expression 
Expression<Func<Product, bool>>  where = p=>p.Id==id   Func ,predicate,action :  func,predicate =bool













3- include(p=>p.ProductType).include(p=>p.ProductBrand)  --list of includes 

list of expression  list<Expression<Func<Product, object>>>




// we will make a class of specification and in it we will make a method to get the query
make it in domain because it a query to database






//////////////////////////////////////////////////////////session3/////////

//we now will make filteration to product by type and brand  and by two &&
// in product with prand an d type specification we will handle in inside sped a id


//when controllers see parameter in action he search in segments ,query string , file ,or html form 


//he work by pass from controller to service and then to specificationspecific

//this make a values of base specification and then we will pass it to repository

//then repository make a query by specicationEvaluator in create query


//we have a many and complex parameters in product we need to pass it from controller to specification in sirect
//so we will make complex parameter as query parameter in get to have all these inputs in it



///////////////////////////////////////////////////session 5//////////////

pagination is a technique to breaking large records into partions called pages 

//we dont need to load all data in one time to not make a problem

// that will be with page size separate a collection to groubs of 10
and page index give me group 6 that will give five numbers 54 55

// there are partioning operator in linq called skip : size and take : index 


///////////////////////////////////////////////session4////////////////////////////

//we will handle exceptions off user and api json 
usaully errors come in response like blanc or somthing we need to make it oncable and understandable
//we in video of name custom Exception Middleware

404 not found for end point
201 not found product out of range we have only 18 product 
500 internal server error the content is text we should make it as json
400 bad request validation error like we need int client send string 
//that 400 will go with json from api model state in controller 

//we now make one shape for all these errors


// request first go in pipelines in middlewares 

to make middle ware we should make it as cluss that have in constructor parameter of requestDelegete
request delegete refer to next middlewares

and public method named invoke , invokeAsync this method must return task and accept parameter in it as httpcontext

httpcontext refer to a current request 






///////////////////////////////////////////////////session 5 6/////////////////////
//provide businesses wtith too ls to customers manage its orders in basket

basket module Endpoint   create basket , update basket , delete basket , get basket by id

basket modules and Entites

Customer Basket : string Id  Icollection <BasketItem> Items

Basket Item : string Id - int Quantity  - string Name - decimal Price - string PictureUrl


we will use redis as stor so we will make entites in domain 



















